{
    "Valid": "Valid.",
    "Legal": "Legal!",
    "Error": "Internal error.",
    "AnalysisUnavailable": "Analysis not available for this Pokémon.",
    "F0_1": "{0}: {1}",
    "SInvalid": "Invalid",
    "SFishy": "Fishy",
    "SValid": "Valid",
    "NotImplemented": "Not Implemented",
    "AbilityCapsuleUsed": "Ability available with Ability Capsule.",
    "AbilityPatchUsed": "Ability available with Ability Patch.",
    "AbilityPatchRevertUsed": "Ability available with Ability Patch Revert.",
    "AbilityFlag": "Ability matches ability number.",
    "AbilityHiddenFail": "Hidden Ability mismatch for encounter type.",
    "AbilityHiddenUnavailable": "Hidden Ability not available.",
    "AbilityMismatch": "Ability mismatch for encounter.",
    "AbilityMismatch3": "Ability does not match Generation 3 species ability.",
    "AbilityMismatchFlag": "Ability does not match ability number.",
    "AbilityMismatchGift": "Ability does not match Mystery Gift.",
    "AbilityMismatchPID": "Ability does not match PID.",
    "AbilityUnexpected": "Ability is not valid for species/form.",
    "AwakenedCap": "Individual AV cannot be greater than {0}.",
    "AwakenedShouldBeValue": "{1} AV should be greater than {0}.",
    "BallAbility": "Can't obtain Hidden Ability with Ball.",
    "BallEggCherish": "Can't have Cherish Ball for regular Egg.",
    "BallEggMaster": "Can't have Master Ball for regular Egg.",
    "BallEnc": "Correct ball for encounter type.",
    "BallEncMismatch": "Can't have ball for encounter type.",
    "BallHeavy": "Can't have Heavy Ball for light, low-catch rate species (Gen7).",
    "BallSpecies": "Can't obtain species in Ball.",
    "BallSpeciesPass": "Ball possible for species.",
    "BallUnavailable": "Ball unobtainable in origin Generation.",
    "ContestZero": "Contest Stats should be 0.",
    "ContestZeroSheen": "Contest Stat Sheen should be 0.",
    "ContestSheenGEQ_0": "Contest Stat Sheen should be >= {0}.",
    "ContestSheenLEQ_0": "Contest Stat Sheen should be <= {0}.",
    "DateCalendarInvalidMet": "Met Date is not a valid calendar date.",
    "DateCalendarInvalidEgg": "Egg Met Date is not a valid calendar date.",
    "DateLocalInvalidDate": "Local Date is outside of console's local time window.",
    "DateLocalInvalidTime": "Local Time is not a valid timestamp.",
    "DateOutsideDistributionWindow": "Met Date is outside of distribution window.",
    "EggContest": "Cannot increase Contest Stats of an Egg.",
    "EggEXP": "Eggs cannot receive experience.",
    "EggFMetLevel_0": "Invalid Met Level, expected {0}.",
    "EggHatchCycles": "Invalid Egg hatch cycles.",
    "EggLocation": "Able to hatch an Egg at Met Location.",
    "EggLocationInvalid": "Can't hatch an Egg at Met Location.",
    "EggLocationNone": "Invalid Egg Location, expected none.",
    "EggLocationPalPark": "Invalid Met Location, expected Pal Park.",
    "EggLocationTrade": "Able to hatch a traded Egg at Met Location.",
    "EggLocationTradeFail": "Invalid Egg Location, shouldn't be 'traded' while an Egg.",
    "EggMetLocationFail": "Can't obtain Egg from Egg Location.",
    "EggNature": "Eggs cannot have their Stat Nature changed.",
    "EggPP": "Eggs cannot have modified move PP counts.",
    "EggPPUp": "Cannot apply PP Ups to an Egg.",
    "EggRelearnFlags": "Expected no Relearn Move Flags.",
    "EggShinyPokeStar": "Eggs cannot be a Pokéstar Studios star.",
    "EggSpecies": "Can't obtain Egg for this species.",
    "EggUnhatched": "Valid un-hatched Egg.",
    "EncCondition": "Valid Wild Encounter at location.",
    "EncConditionBadRNGFrame": "Unable to match encounter conditions to a possible RNG frame.",
    "EncConditionBadSpecies": "Species does not exist in origin game.",
    "EncGift": "Unable to match a gift Egg encounter from origin game.",
    "EncGiftEggEvent": "Unable to match an event Egg encounter from origin game.",
    "EncGiftIVMismatch": "IVs do not match Mystery Gift Data.",
    "EncGiftNicknamed": "Event gift has been nicknamed.",
    "EncGiftNotFound": "Unable to match to a Mystery Gift in the database.",
    "EncGiftPIDMismatch": "Mystery Gift fixed PID mismatch.",
    "EncGiftShinyMismatch": "Mystery Gift shiny mismatch.",
    "EncGiftVersionNotDistributed": "Mystery Gift cannot be received by this version.",
    "EncInvalid": "Unable to match an encounter from origin game.",
    "EncMasteryInitial": "Initial move mastery flags do not match the encounter's expected state.",
    "EncTradeChangedNickname": "In-game Trade Nickname has been altered.",
    "EncTradeChangedOT": "In-game Trade OT has been altered.",
    "EncTradeIndexBad": "In-game Trade invalid index?",
    "EncTradeMatch": "Valid in-game trade.",
    "EncTradeUnchanged": "In-game Trade OT and Nickname have not been altered.",
    "EncStaticPIDShiny": "Static Encounter shiny mismatch.",
    "EncTypeMatch": "Encounter Type matches encounter.",
    "EncTypeMismatch": "Encounter Type does not match encounter.",
    "EncUnreleased": "Unreleased event.",
    "EncUnreleasedEMewJP": "Non Japanese Mew from Faraway Island. Unreleased event.",
    "EReaderAmerica": "American E-Reader Berry in Japanese save file.",
    "EReaderInvalid": "Invalid E-Reader Berry.",
    "EReaderJapan": "Japanese E-Reader Berry in international save file.",
    "Effort2Remaining": "2 EVs remaining.",
    "EffortAbove252": "EVs cannot go above 252.",
    "EffortAbove510": "EV total cannot be above 510.",
    "EffortAllEqual": "EVs are all equal.",
    "EffortCap100": "Individual EV for a level 100 encounter in Generation 4 cannot be greater than 100.",
    "EffortEgg": "Eggs cannot receive EVs.",
    "EffortShouldBeZero": "Cannot receive EVs.",
    "EffortEXPIncreased": "All EVs are zero, but leveled above Met Level.",
    "EffortUntrainedCap": "Individual EV without changing EXP cannot be greater than {0}.",
    "EvoInvalid": "Evolution not valid (or level/trade evolution unsatisfied).",
    "EvoTradeReqOutsider": "Outsider {0} should have evolved into {1}.",
    "EvoTradeRequired": "Version Specific evolution requires a trade to opposite version. A Handling Trainer is required.",
    "FatefulGiftMissing": "Fateful Encounter with no matching Encounter. Has the Mystery Gift data been contributed?",
    "FatefulInvalid": "Fateful Encounter should not be checked.",
    "FatefulMissing": "Special in-game Fateful Encounter flag missing.",
    "FatefulMystery": "Mystery Gift Fateful Encounter.",
    "FatefulMysteryMissing": "Mystery Gift Fateful Encounter flag missing.",
    "FavoriteMarkingUnavailable": "Favorite Marking is not available.",
    "FormArgumentLEQ_0": "Form argument is too high for current form.",
    "FormArgumentGEQ_0": "Form argument is too low for current form.",
    "FormArgumentNotAllowed": "Form argument is not allowed for this encounter.",
    "FormArgumentValid": "Form argument is valid.",
    "FormArgumentInvalid": "Form argument is not valid.",
    "FormBattle": "Form cannot exist outside of a battle.",
    "FormEternal": "Valid Eternal Flower encounter.",
    "FormEternalInvalid": "Invalid Eternal Flower encounter.",
    "FormInvalidGame": "Form cannot be obtained in origin game.",
    "FormInvalidNature": "Form cannot have this nature.",
    "FormItem": "Held item matches Form.",
    "FormItemInvalid": "Held item does not match Form.",
    "FormParty": "Form cannot exist outside of Party.",
    "FormPikachuCosplay": "Only Cosplay Pikachu can have this form.",
    "FormPikachuCosplayInvalid": "Cosplay Pikachu cannot have the default form.",
    "FormPikachuEventInvalid": "Event Pikachu cannot have the default form.",
    "FormInvalidExpect_0": "Form is invalid, expected form index {0}.",
    "FormValid": "Form is Valid.",
    "FormVivillon": "Valid Vivillon pattern.",
    "FormVivillonEventPre": "Event Vivillon pattern on pre-evolution.",
    "FormVivillonInvalid": "Invalid Vivillon pattern.",
    "FormVivillonNonNative": "Non-native Vivillon pattern.",
    "G1CatchRateChain": "Catch rate does not match any species from Pokémon evolution chain.",
    "G1CatchRateEvo": "Catch rate match species without encounters. Expected a preevolution catch rate.",
    "G1CatchRateItem": "Catch rate does not match a valid held item from Generation 2.",
    "G1CatchRateMatchPrevious": "Catch Rate matches a species from Pokémon evolution chain.",
    "G1CatchRateMatchTradeback": "Catch rate matches a valid held item from Generation 2.",
    "G1CatchRateNone": "Catch rate does not match any species from Pokémon evolution chain or any Generation 2 held items.",
    "G1CharNick": "Nickname from Generation 1/2 uses unavailable characters.",
    "G1CharOT": "OT from Generation 1/2 uses unavailable characters.",
    "G1OTGender": "Female OT from Generation 1/2 is invalid.",
    "G1Stadium": "Incorrect Stadium OT.",
    "G1Type1Fail": "Invalid Type A, does not match species type.",
    "G1Type2Fail": "Invalid Type B, does not match species type.",
    "G1TypeMatch1": "Valid Type A, matches species type.",
    "G1TypeMatch2": "Valid Type B, matches species type.",
    "G1TypeMatchPorygon": "Porygon with valid Type A and B values.",
    "G1TypePorygonFail": "Porygon with invalid Type A and B values. Does not a match a valid type combination.",
    "G1TypePorygonFail1": "Porygon with invalid Type A value.",
    "G1TypePorygonFail2": "Porygon with invalid Type B value.",
    "G2InvalidTileTreeNotFound": "Could not find a tree for Crystal headbutt encounter that matches OTID.",
    "G2TreeID": "Found a tree for Crystal headbutt encounter that matches OTID.",
    "G2OTGender": "OT from Virtual Console games other than Crystal cannot be female.",
    "G3EReader": "Non Japanese Shadow E-reader Pokémon. Unreleased encounter.",
    "G3OTGender": "OT from Colosseum/XD cannot be female.",
    "G4InvalidTileR45Surf": "Johto Route 45 surfing encounter. Unreachable Water tiles.",
    "G4PartnerMoodEgg": "Eggs cannot have an Mood stat value.",
    "G4PartnerMoodZero": "Mood stat value should be zero when not in the player's party.",
    "G4ShinyLeafBitsInvalid": "Shiny Leaf/Crown bits are not valid.",
    "G4ShinyLeafBitsEgg": "Eggs cannot have Shiny Leaf/Crown.",
    "G5IVAll30": "All IVs of N's Pokémon should be 30.",
    "G5PIDShinyGrotto": "Hidden Grotto captures cannot be shiny.",
    "G5SparkleInvalid": "Special in-game N's Sparkle flag should not be checked.",
    "G5SparkleRequired": "Special in-game N's Sparkle flag missing.",
    "G5PokeStarMustBeZero": "Pokéstar Studios fame must be zero, cannot participate.",
    "G7BSocialShouldBe100Spirit": "Spirit should be 100 for Pokémon not in the player's party.",
    "G7BSocialShouldBe100Mood": "Mood should be 100 for Pokémon not in the player's party.",
    "GanbaruStatTooHigh": "One or more Ganbaru Value is above the natural limit of (10 - IV bonus).",
    "GenderInvalidNone": "Genderless Pokémon should not have a gender.",
    "GeoBadOrder": "GeoLocation Memory: Gap/Blank present.",
    "GeoHardwareInvalid": "Geolocation: Country is not in 3DS region.",
    "GeoHardwareRange": "Invalid Console Region.",
    "GeoHardwareValid": "Geolocation: Country is in 3DS region.",
    "GeoMemoryMissing": "GeoLocation Memory: Memories should be present.",
    "GeoNoCountryHT": "GeoLocation Memory: HT Name present but has no previous Country.",
    "GeoNoRegion": "GeoLocation Memory: Region without Country.",
    "HyperTrainLevelGEQ_0": "Can't Hyper Train a Pokémon that isn't level {0}.",
    "HyperPerfectAll": "Can't Hyper Train a Pokémon with perfect IVs.",
    "HyperPerfectOne": "Can't Hyper Train a perfect IV.",
    "HyperPerfectUnavailable": "Can't Hyper Train any IV(s).",
    "ItemEgg": "Eggs cannot hold items.",
    "ItemUnreleased": "Held item is unreleased.",
    "IVAllEqual_0": "All IVs are {0}.",
    "IVNotCorrect": "IVs do not match encounter requirements.",
    "IVFlawlessCountGEQ_0": "Should have at least {0} IVs = 31.",
    "LevelEXPThreshold": "Current experience matches level threshold.",
    "LevelEXPTooHigh": "Current experience exceeds maximum amount for level 100.",
    "LevelMetBelow": "Current level is below met level.",
    "LevelMetGift": "Met Level does not match Mystery Gift level.",
    "LevelMetGiftFail": "Current Level below Mystery Gift level.",
    "LevelMetSane": "Current level is not below met level.",
    "MarkValueOutOfRange_0": "Individual marking at index {0} is not within the allowed value range.",
    "MarkValueShouldBeZero": "Marking flags cannot be set.",
    "MarkValueUnusedBitsPresent": "Marking flags uses bits beyond the accessible range.",
    "MemoryArgBadCatch_H": "{0} Memory: {0} did not catch this.",
    "MemoryArgBadHatch_H": "{0} Memory: {0} did not hatch this.",
    "MemoryArgBadHT": "Memory: Can't have Handling Trainer Memory as Egg.",
    "MemoryArgBadID_H": "{0} Memory: Can't obtain Memory on {0} Version.",
    "MemoryArgBadItem_H1": "{0} Memory: Species can't hold this item.",
    "MemoryArgBadLocation_H": "{0} Memory: Can't obtain Location on {0} Version.",
    "MemoryArgBadMove_H1": "{0} Memory: Species can't learn {1}.",
    "MemoryArgBadOTEgg_H": "{0} Memory: Link Trade is not a valid first memory.",
    "MemoryArgBadSpecies_H1": "{0} Memory: Can't capture {1} in game.",
    "MemoryArgSpecies_H": "{0} Memory: Species can be captured in game.",
    "MemoryCleared_H": "Memory: Not cleared properly.",
    "MemoryValid_H": "{0} Memory is valid.",
    "MemoryFeelInvalid_H": "{0} Memory: Invalid Feeling.",
    "MemoryHTFlagInvalid": "Untraded: Current handler should not be the Handling Trainer.",
    "MemoryHTGender_0": "HT Gender invalid: {0}",
    "MemoryHTLanguage": "HT Language is missing.",
    "MemoryIndexArgHT": "Should have a HT Memory TextVar value (somewhere).",
    "MemoryIndexFeel_H1": "{0} Memory: Feeling should be index {1}.",
    "MemoryIndexFeelHTLEQ9": "Should have a HT Memory Feeling value 0-9.",
    "MemoryIndexID_H1": "{0} Memory: Should be index {1}.",
    "MemoryIndexIntensity_H1": "{0} Memory: Intensity should be index {1}.",
    "MemoryIndexIntensityHT1": "Should have a HT Memory Intensity value (1st).",
    "MemoryIndexIntensityMin_H1": "{0} Memory: Intensity should be at least {1}.",
    "MemoryIndexLinkHT": "Should have a Link Trade HT Memory.",
    "MemoryIndexVar": "{0} Memory: TextVar should be index {1}.",
    "MemoryMissingHT": "Memory: Handling Trainer Memory missing.",
    "MemoryMissingOT": "Memory: Original Trainer Memory missing.",
    "MemorySocialZero": "Social Stat should be zero.",
    "MemoryStatSocialLEQ_0": "Social Stat should be <= {0}",
    "MemoryStatAffectionHT0": "Untraded: Handling Trainer Affection should be 0.",
    "MemoryStatAffectionOT0": "OT Affection should be 0.",
    "MemoryStatFriendshipHT0": "Untraded: Handling Trainer Friendship should be 0.",
    "MemoryStatFriendshipOTBaseEvent_0": "Event OT Friendship does not match base friendship.",
    "MetDetailTimeOfDay": "Met Time of Day value is not within the expected range.",
    "MoveEvoFCombination_0": "Moves combinations is not compatible with {0} evolution.",
    "MoveFExpectSingle_0": "Expected: {0}",
    "MoveKeldeoMismatch": "Keldeo Move/Form mismatch.",
    "MovePPExpectHealed_0": "Move {0} PP is below the amount expected.",
    "MovePPTooHigh_0": "Move {0} PP is above the amount allowed.",
    "MovePPUpsTooHigh_0": "Move {0} PP Ups is above the amount allowed.",
    "MoveShopAlphaMoveShouldBeMastered_0": "Alpha Move should be marked as mastered.",
    "MoveShopAlphaMoveShouldBeOther": "Alpha encounter cannot be found with this Alpha Move.",
    "MoveShopAlphaMoveShouldBeZero": "Only Alphas may have an Alpha Move set.",
    "MoveShopMasterInvalid_0": "Cannot manually master {0}: not permitted to master.",
    "MoveShopMasterNotLearned_0": "Cannot manually master {0}: not in possible learned level up moves.",
    "MoveShopPurchaseInvalid_0": "Cannot purchase {0} from the move shop.",
    "MoveTechRecordFlagMissing_0": "Unexpected Technical Record Learned flag: {0}",
    "NickFlagEggNo": "Egg must be not nicknamed.",
    "NickFlagEggYes": "Egg must be nicknamed.",
    "NickInvalidChar": "Cannot be given this Nickname.",
    "NickLengthLong": "Nickname too long.",
    "NickLengthShort": "Nickname is empty.",
    "NickMatchLanguage": "Nickname matches species name.",
    "NickMatchLanguageEgg": "Egg matches language Egg name.",
    "NickMatchLanguageEggFail": "Egg name does not match language Egg name.",
    "NickMatchLanguageFail": "Nickname does not match species name.",
    "NickMatchLanguageFlag": "Nickname flagged, matches species name.",
    "NickMatchNoOthers": "Nickname does not match another species name.",
    "NickMatchNoOthersFail": "Nickname matches another species name (+language).",
    "OTLanguage": "Language ID should be {0}, not {1}.",
    "OTLong": "OT Name too long.",
    "OTShort": "OT Name too short.",
    "OTSuspicious": "Suspicious Original Trainer details.",
    "OT_IDEqual": "TID16 and SID16 are equal.",
    "OT_IDs0": "TID16 and SID16 are 0.",
    "OT_SID0": "SID16 is zero.",
    "OT_SID0Invalid": "SID16 should be 0.",
    "OT_TID0": "TID16 is zero.",
    "OT_IDInvalid": "TID and SID combination is not possible.",
    "PIDEncryptWurmple": "Wurmple evolution Encryption Constant mismatch.",
    "PIDEncryptZero": "Encryption Constant is not set.",
    "PIDEqualsEC": "Encryption Constant matches PID.",
    "PIDGenderMatch": "Gender matches PID.",
    "PIDGenderMismatch": "PID-Gender mismatch.",
    "PIDNatureMatch": "Nature matches PID.",
    "PIDNatureMismatch": "PID-Nature mismatch.",
    "PIDTypeMismatch": "PID+ correlation does not match what was expected for the Encounter's type.",
    "PIDZero": "PID is not set.",
    "PokerusDaysTooHigh_0": "Pokérus Days Remaining value is too high; expected <= {0}.",
    "PokerusStrainUnobtainable_0": "Pokérus Strain {0} cannot be obtained.",
    "RibbonAllValid": "All ribbons accounted for.",
    "RibbonEgg": "Can't receive Ribbon(s) as an Egg.",
    "RibbonsInvalid_0": "Invalid Ribbons: {0}",
    "RibbonsMissing_0": "Missing Ribbons: {0}",
    "RibbonMarkingInvalid_0": "Invalid Marking: {0}",
    "RibbonMarkingMissing_0": "Missing Marking: {0}",
    "RibbonMarkingAffixed_0": "Invalid Affixed Ribbon/Marking: {0}",
    "StatDynamaxInvalid": "Dynamax Level is not within the expected range.",
    "StatIncorrectHeight": "Calculated Height does not match stored value.",
    "StatIncorrectHeightCopy": "Copy Height does not match the original value.",
    "StatIncorrectHeightValue": "Height does not match the expected value.",
    "StatIncorrectWeight": "Calculated Weight does not match stored value.",
    "StatIncorrectWeightValue": "Weight does not match the expected value.",
    "StatInvalidHeightWeight": "Height / Weight values are statistically improbable.",
    "StatIncorrectCP": "Calculated CP does not match stored value.",
    "StatGigantamaxInvalid": "Gigantamax Flag mismatch.",
    "StatGigantamaxValid": "Gigantamax Flag was changed via Max Soup.",
    "StatNatureInvalid": "Stat Nature is not within the expected range.",
    "StatBattleVersionInvalid": "Battle Version is not within the expected range.",
    "StatNobleInvalid": "Noble Flag mismatch.",
    "StatAlphaInvalid": "Alpha Flag mismatch.",
    "StoredSourceEgg": "Egg must be in Box or Party.",
    "StoredSlotSourceInvalid_0": "Invalid Stored Source: {0}",
    "SuperComplete": "Super Training complete flag mismatch.",
    "SuperDistro": "Distribution Super Training missions are not released.",
    "SuperEgg": "Can't Super Train an Egg.",
    "SuperNoComplete": "Can't have active Super Training complete flag for origins.",
    "SuperNoUnlocked": "Can't have active Super Training unlocked flag for origins.",
    "SuperUnavailable": "Super Training missions are not available in games visited.",
    "SuperUnused": "Unused Super Training Flag is flagged.",
    "G6SuperTrainEggBag": "Egg cannot use a Training Bag.",
    "G6SuperTrainEggHits": "Eggs cannot hit Training Bags.",
    "G6SuperTrainBagInvalid_0": "Unrecognized Training Bag ID: {0}",
    "G6SuperTrainBagHitsInvalid_012": "Training bag cannot have {0} hits; expected value within [{1},{2}].",
    "TeraTypeIncorrect": "Tera Type does not match the expected value.",
    "TeraTypeMismatch": "Tera Type does not match either of the default types.",
    "TradeNotAvailable": "Encounter cannot be traded to the active trainer.",
    "TrainerIDNoSeed": "Trainer ID is not obtainable from any RNG seed.",
    "TransferBad": "Incorrectly transferred from previous generation.",
    "TransferCurrentHandlerInvalid": "Invalid Current handler value, trainer details for save file expected another value.",
    "TransferEgg": "Can't transfer Eggs between Generations.",
    "TransferEggLocationTransporter": "Invalid Met Location, expected Poké Transfer.",
    "TransferEggMetLevel": "Invalid Met Level for transfer.",
    "TransferEggVersion": "Can't transfer Eggs to this game.",
    "TransferFlagIllegal": "Flagged as illegal by the game (glitch abuse).",
    "TransferHTFlagRequired": "Current handler cannot be the OT.",
    "TransferHTMismatchName": "Handling trainer does not match the expected trainer name.",
    "TransferHTMismatchGender": "Handling trainer does not match the expected trainer gender.",
    "TransferHTMismatchLanguage": "Handling trainer does not match the expected trainer language.",
    "TransferKoreanGen4": "Korean Generation 4 games cannot interact with International Generation 4 games.",
    "TransferMet": "Invalid Met Location, expected Poké Transfer/Zoroark (Crown Beasts), Poké Transfer/Celebi (Celebi).",
    "TransferNotPossible": "Unable to transfer into current format from origin format.",
    "TransferMetLocation": "Invalid Transfer Met Location.",
    "TransferNature": "Invalid Nature for transfer Experience.",
    "TransferObedienceLevel": "Invalid Obedience Level.",
    "TransferPIDECBitFlip": "PID should be equal to EC [with top bit flipped]!",
    "TransferPIDECEquals": "PID should be equal to EC!",
    "TransferPIDECXor": "Encryption Constant matches shinyxored PID.",
    "TransferTrackerMissing": "Pokémon HOME Transfer Tracker is missing.",
    "TransferTrackerShouldBeZero": "Pokémon HOME Transfer Tracker should be 0.",
    "TrashBytesExpected": "Expected Trash Bytes.",
    "TrashBytesMismatchInitial": "Expected initial trash bytes to match the encounter.",
    "TrashBytesMissingTerminator": "Final terminator missing.",
    "TrashBytesShouldBeEmpty": "Trash Bytes should be cleared.",
    "EncTradeShouldHaveEvolvedToSpecies_0": "Trade Encounter should have evolved to species: {0}.",
    "EncGiftLanguageNotDistributed": "Gift Encounter was never distributed with this language.",
    "EncGiftRegionNotDistributed": "Gift Encounter was never distributed to this Console Region.",
    "FormInvalidRangeLEQ_0F": "Form Count is out of range. Expected <= {0}, got {1}.",
    "MovesShouldMatchRelearnMoves": "Moves should exactly match Relearn Moves.",
    "MemoryStatEnjoyment_0": "Enjoyment should be {0}.",
    "MemoryStatFullness_0": "Fullness should be {0}.",
    "MemoryStatFullnessLEQ_0": "Fullness should be <= {0}.",
    "OTLanguageShouldBe_0": "Language ID should be {0}, not {1}.",
    "OTLanguageShouldBe_0or1": "Language ID should be {0} or {1}, not {2}.",
    "OTLanguageShouldBeLeq_0": "Language ID should be <= {0}, not {1}.",
    "OTLanguageCannotPlayOnVersion_0": "Language ID {0} cannot be played on this version.",
    "OTLanguageCannotTransferToConsoleRegion_0": "Language ID {0} cannot be transferred to this Console Region.",
    "WordFilterInvalidCharacter_0": "Word Filter: Invalid character '{0}' (0x{1}).",
    "WordFilterFlaggedPattern_01": "Word Filter ({1}): Flagged pattern '{0}'.",
    "WordFilterTooManyNumbers_0": "Word Filter: Too many numbers (>{0}).",
    "BulkCloneDetectedDetails": "Clone detected (Details).",
    "BulkCloneDetectedTracker": "Clone detected (Duplicate Tracker).",
    "HintEvolvesToSpecies_0": "Evolves to species: {0}.",
    "HintEvolvesToRareForm_0": "Evolves to rare form: {0}.",
    "BulkSharingEncryptionConstantGenerationDifferent": "Detected sharing of Encryption Constant across generations.",
    "BulkSharingEncryptionConstantGenerationSame": "Detected sharing of Encryption Constant.",
    "BulkSharingEncryptionConstantRNGType": "Detected sharing of Encryption Constant sharing for different RNG encounters.",
    "BulkSharingPIDGenerationDifferent": "Detected sharing of PID across generations.",
    "BulkSharingPIDGenerationSame": "Detected sharing of PID.",
    "BulkSharingPIDRNGType": "Detected sharing of PID for different RNG encounters.",
    "BulkDuplicateMysteryGiftEggReceived": "Detected multiple redemptions of the same non-repeatable Mystery Gift Egg.",
    "BulkSharingTrainerID": "Detected sharing of Trainer ID across multiple trainer names.",
    "BulkSharingTrainerVersion": "Detected sharing of Trainer ID across multiple versions."
}